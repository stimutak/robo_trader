global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'robo-trader-prod'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - 'alertmanager:9093'

# Load rules once and periodically evaluate them
rule_files:
  - '/etc/prometheus/rules/*.yml'

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'

  # RoboTrader main application
  - job_name: 'robo-trader'
    scrape_interval: 10s
    scrape_timeout: 5s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['trader:8080']
        labels:
          service: 'trading-system'
          component: 'trader'

  # Dashboard application
  - job_name: 'dashboard'
    scrape_interval: 30s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['dashboard:5555']
        labels:
          service: 'trading-system'
          component: 'dashboard'

  # WebSocket server
  - job_name: 'websocket'
    scrape_interval: 30s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['websocket:8765']
        labels:
          service: 'trading-system'
          component: 'websocket'

  # Redis
  - job_name: 'redis'
    scrape_interval: 30s
    static_configs:
      - targets: ['redis:6379']
        labels:
          service: 'cache'
          component: 'redis'

  # Node Exporter (if deployed)
  - job_name: 'node-exporter'
    scrape_interval: 30s
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          service: 'infrastructure'
          component: 'node-exporter'

  # cAdvisor for container metrics (if deployed)
  - job_name: 'cadvisor'
    scrape_interval: 30s
    static_configs:
      - targets: ['cadvisor:8080']
        labels:
          service: 'infrastructure'
          component: 'cadvisor'

  # Kubernetes service discovery (for K8s deployments)
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - trading
    relabel_configs:
      # Only scrape pods with prometheus.io/scrape annotation
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true

      # Get port from prometheus.io/port annotation
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2

      # Get metrics path from prometheus.io/path annotation
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)

      # Add pod metadata as labels
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: kubernetes_pod_name
      - source_labels: [__meta_kubernetes_pod_label_app]
        target_label: app
      - source_labels: [__meta_kubernetes_pod_label_version]
        target_label: version

  # Kubernetes service discovery for services
  - job_name: 'kubernetes-services'
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - trading
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: kubernetes_service_name

# Remote write configuration (optional - for long-term storage)
# remote_write:
#   - url: 'http://victoriametrics:8428/api/v1/write'
#     queue_config:
#       max_samples_per_send: 10000
#       capacity: 100000
#       max_shards: 50

# Remote read configuration (optional)
# remote_read:
#   - url: 'http://victoriametrics:8428/api/v1/read'
